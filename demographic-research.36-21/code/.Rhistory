width = 1, height = age_width,
fill = cut_interval(px, length = 0.1)),
data = filter(cod10, sex == "total")) +
# Lexis表面轮廓
geom_path(aes(x = x, y = y, group = group),
data = filter(cod10_mode_outline, sex == "total"),
lwd = 0.3) +
# 比例尺
scale_fill_brewer(type = "seq", palette = "PuBuGn",
guide = guide_legend(reverse = TRUE)) +  # 使用PuBuGn颜色方案，并反转图例顺序
scale_x_continuous("Year", expand = c(0.02, 0),
breaks = seq(1940, 2000, 20)) +  # 设置X轴为年份，每20年标记一次
scale_y_continuous("Age", expand = c(0, 0),
breaks = seq(0, 100, 20)) +  # 设置Y轴为年龄，每20岁标记一次
# 分面
facet_wrap(~ cod, ncol = 5, as.table = TRUE) +  # 按死亡原因分面，每行5个面板
# Lexis网格
geom_hline(yintercept = seq(20, 100, 20),
alpha = 0.2, lty = "dotted") +  # 添加水平虚线，每20岁一条
geom_vline(xintercept = seq(1940, 1980, 20),
alpha = 0.2, lty = "dotted") +  # 添加垂直虚线，每20年一条
geom_abline(intercept = seq(-100, 100, 20)-1940,
alpha = 0.2, lty = "dotted") +  # 添加对角线，表示同一出生队列
# 坐标
coord_equal() +  # 使用等比例坐标系
# 主题
theme_void() +  # 使用空白主题，移除大部分背景元素
theme(
axis.text   = element_text(colour = "black"),
axis.text.y = element_text(),
axis.text.x = element_text(),
panel.spacing = unit(0, "cm")  # 修正：panel.margin 已更新为 panel.spacing
)
plot_small_multiples
#########################################################################
# 绘制带有主要死亡原因轮廓的小多倍Lexis表面图                           #
#########################################################################
# 本代码的目标：
# 1. 分析不同死亡原因在不同年龄和时期的分布模式
# 2. 识别每个年龄-时期组合中的主要死亡原因
# 3. 通过Lexis表面图可视化这些模式，并用轮廓线突出显示主要死亡原因区域
# 第一部分：初始化环境 ---------------------------------------------------
library(readr)    # 用于高效读取CSV文件
library(rgeos)    # 提供地理空间计算功能
#########################################################################
# 绘制带有主要死亡原因轮廓的小多倍Lexis表面图                           #
#########################################################################
# 本代码的目标：
# 1. 分析不同死亡原因在不同年龄和时期的分布模式
# 2. 识别每个年龄-时期组合中的主要死亡原因
# 3. 通过Lexis表面图可视化这些模式，并用轮廓线突出显示主要死亡原因区域
# 第一部分：初始化环境 ---------------------------------------------------
library(readr)    # 用于高效读取CSV文件
library(raster)   # 处理和分析栅格数据
library(dplyr)    # 提供数据处理和管道操作
library(ggplot2)  # 生成高质量图形
# 第二部分：数据导入 ---------------------------------------------------
# 读取数据集：包含按年份、年龄和性别划分的10种选定死亡原因占所有死亡的比例
# 数据结构：cod10包含列：year(年份), age(年龄组), age_width(年龄组宽度),
#          sex(性别), cod(死亡原因), px(死亡原因比例)
cod10 <- read_csv("./out/data/cod10.csv")
#########################################################################
# 绘制带有主要死亡原因轮廓的小多倍Lexis表面图                           #
#########################################################################
# 本代码的目标：
# 1. 分析不同死亡原因在不同年龄和时期的分布模式
# 2. 识别每个年龄-时期组合中的主要死亡原因
# 3. 通过Lexis表面图可视化这些模式，并用轮廓线突出显示主要死亡原因区域
# 第一部分：初始化环境 ---------------------------------------------------
library(readr)    # 用于高效读取CSV文件
library(raster)   # 处理和分析栅格数据
library(dplyr)    # 提供数据处理和管道操作
library(ggplot2)  # 生成高质量图形
# 第二部分：数据导入 ---------------------------------------------------
# 读取数据集：包含按年份、年龄和性别划分的10种选定死亡原因占所有死亡的比例
# 数据结构：cod10包含列：year(年份), age(年龄组), age_width(年龄组宽度),
#          sex(性别), cod(死亡原因), px(死亡原因比例)
cod10 <- read_csv("/Users/tuo/Desktop/Lexis/demographic-research.36-21/data/cod10.csv")
# 第三部分：数据处理 - 创建详细的Lexis表面数据 --------------------------
# 步骤1：创建完整的1x1年龄-时期网格
# 原始数据可能有不规则的年龄组，这里我们创建均匀的1岁间隔网格
left_join(
# 创建完整的年龄-时期-性别-死亡原因组合网格
expand.grid(year      = unique(cod10$year),        # 所有年份
age_start = 0:104,                     # 单岁年龄，从0到104岁
age_width = 1,                         # 设定统一的年龄间隔为1岁
sex       = unique(cod10$sex),         # 所有性别类别
cod       = unique(cod10$cod),         # 所有死亡原因
stringsAsFactors = FALSE               # 不将字符串转换为因子
),
# 从原始数据中选择需要的列，排除age和age_width这两列，因为我们将使用新创建的值
select(cod10, -age, -age_width)
) %>%
# 步骤2：数据准备和缺失值处理
# 按性别、年份、死亡原因和起始年龄排序，为后续填充缺失值做准备
arrange(sex, year, cod, age_start) %>%
# 使用前值填充(LOCF)处理缺失值：对于细分后没有具体数值的年龄段，
# 使用同一组内前一个有效值填充
mutate(px = zoo::na.locf(.$px)) -> cod10_1x1  # 结果存入新的数据框cod10_1x1
# 步骤3：识别每个年龄-时期-性别组合中的主要死亡原因
cod10_1x1 %>%
# 按性别、年份和起始年龄分组，在每个组内比较不同死亡原因
group_by(sex, year, age_start) %>%
# 标记比例最高的死亡原因(值为1)，其他为NA
mutate(cod_mode = ifelse(px == max(px), 1, NA)) %>%
ungroup() -> cod10_mode  # 结果存入新的数据框cod10_mode
# 第四部分：为主要死亡原因区域生成地理空间轮廓 -------------------------
# 使用地理空间技术创建轮廓线，突出显示每种死亡原因在何时何地是主要原因
cod10_mode %>%
# 按性别和死亡原因分组处理
group_by(sex, cod) %>%
do(
{
# 步骤1：将数据转换为矩阵形式[年龄,时期]，便于栅格处理
M <-
matrix(
.$cod_mode,                          # 使用之前标记的主要死亡原因数据
nrow = n_distinct(.$age_start),      # 矩阵行数 = 不同年龄数
ncol = n_distinct(.$year),           # 矩阵列数 = 不同年份数
dimnames = list(unique(.$age_start), # 行名 = 年龄值
unique(.$year))      # 列名 = 年份值
)
# 步骤2：翻转矩阵，使年龄轴方向正确
M <- apply(M, 2, rev)  # 沿列(第2维)应用rev函数，反转每列
# 步骤3：将矩阵转换为地理空间栅格对象
# 这使我们能够使用地理空间功能来生成轮廓
R <- raster(M,
xmn = min(.$year),          # 栅格x轴最小值 = 最早年份
xmx = max(.$year)+1,        # 栅格x轴最大值 = 最晚年份+1
ymn = min(.$age_start),     # 栅格y轴最小值 = 最小年龄
ymx = max(.$age_start)+1)   # 栅格y轴最大值 = 最大年龄+1
# 步骤4：生成轮廓多边形并转换为数据框
# 将值为1的相邻单元格合并为多边形(dissolve=TRUE)
outline <- fortify(rasterToPolygons(R, dissolve = TRUE))
# 步骤5：提取多边形坐标点数据，用于绘图
data.frame(x = outline$lon, y = outline$lat, group = outline$group)
}
) -> cod10_mode_outline  # 结果存入新的数据框cod10_mode_outline
# 第五部分：创建可视化图表 ----------------------------------------------
plot_small_multiples <-
ggplot() +
# 步骤1：绘制Lexis表面热图，表示不同死亡原因的比例
# 仅使用总体(sex="total")数据，不分男女
geom_tile(aes(x = year+0.5, y = age_start+age_width/2,  # 定位到单元格中心
width = 1, height = age_width,            # 设置单元格尺寸
fill = cut_interval(px, length = 0.1)),   # 将比例值分为等长区间着色
data = filter(cod10, sex == "total")) +
# 步骤2：添加主要死亡原因区域的轮廓线
geom_path(aes(x = x, y = y, group = group),  # 使用之前生成的轮廓线数据
data = filter(cod10_mode_outline, sex == "total"),
lwd = 0.3) +  # 设置线宽为0.3
# 步骤3：设置颜色比例尺
scale_fill_brewer(type = "seq", palette = "PuBuGn",  # 使用蓝绿色渐变色系
guide = guide_legend(reverse = TRUE)) +  # 反转图例顺序
# 步骤4：设置坐标轴
scale_x_continuous("Year", expand = c(0.02, 0),       # X轴标签及边距
breaks = seq(1940, 2000, 20)) +    # X轴刻度，每20年一个
scale_y_continuous("Age", expand = c(0, 0),           # Y轴标签及边距
breaks = seq(0, 100, 20)) +        # Y轴刻度，每20岁一个
# 步骤5：按死亡原因分面显示
facet_wrap(~ cod, ncol = 5, as.table = TRUE) +  # 每行显示5个死亡原因
# 步骤6：添加Lexis网格辅助线
# 水平线表示同年龄，每20岁一条
geom_hline(yintercept = seq(20, 100, 20),
alpha = 0.2, lty = "dotted") +
# 垂直线表示同年份，每20年一条
geom_vline(xintercept = seq(1940, 1980, 20),
alpha = 0.2, lty = "dotted") +
# 对角线表示同一出生队列，每20年一条
geom_abline(intercept = seq(-100, 100, 20)-1940,
alpha = 0.2, lty = "dotted") +
# 步骤7：设置坐标系和主题
coord_equal() +  # 使用等比例坐标系，确保年龄和年份单位长度相同
theme_void() +   # 使用极简主题，去除背景元素
theme(
axis.text   = element_text(colour = "black"),  # 设置坐标轴文本为黑色
axis.text.y = element_text(),                  # 显示Y轴文本
axis.text.x = element_text(),                  # 显示X轴文本
panel.spacing = unit(0, "cm")                  # 设置面板间距为0
)
# 步骤8：保存图表（注释掉的代码）
# 如需生成PDF文件，取消下面注释
#ggsave("./out/fig/small_multiples_raw.pdf", plot_small_multiples,
#       width = 13, height = 8)  # 保存为宽13英寸、高8英寸的PDF文件
small_multiples_raw
plot_small_multiples
##############################################
# 绘制Lexis surface的死亡率性别比               #
##############################################
# 本代码的目标：
# 1. 从人类死亡率数据库(HMD)获取英格兰和威尔士的死亡率数据
# 2. 计算男性与女性死亡率的比值（性别比）
# 3. 通过Lexis表面图可视化不同年龄和时期的死亡率性别差异
# 第一部分：初始化环境 ---------------------------------------------------
library(hmdget)   # 用于从人类死亡率数据库下载数据(GitHub包)
library(ggplot2)  # 用于数据可视化
library(dplyr)    # 用于数据处理和管道操作
library(tidyr)    # 用于数据重塑(长宽格式转换)
library(readr)    # 用于高效读写CSV文件
library(sysfonts) # 用于字体管理
library(showtextdb) # 用于字体数据库
library(showtext)   # 用于在R图形中使用系统字体
showtext.auto()   # 激活showtext功能，允许使用系统字体
# 第二部分：数据获取 -----------------------------------------------------
# HMD数据库凭证（需要在"mortality.org"注册获取）
username = "lingjunl@126.com"
password = "66136613Llj!"
# 步骤1：从人类死亡率数据库下载英格兰和威尔士的死亡率数据
# CNTRY = "GBRTENW" 表示英国的英格兰和威尔士地区
# item = "Mx_1x1" 表示需要1岁年龄间隔、1年时间间隔的死亡率数据
# mx表示死亡率(mortality rate)
enwamx <- readHMDweb(CNTRY = "GBRTENW", item = "Mx_1x1",
username = username, password = password)
library(hmdget)   # 用于从人类死亡率数据库下载数据(GitHub包)
##############################################
# 绘制Lexis surface的死亡率性别比               #
##############################################
# 本代码的目标：
# 1. 从人类死亡率数据库(HMD)获取英格兰和威尔士的死亡率数据
# 2. 计算男性与女性死亡率的比值（性别比）
# 3. 通过Lexis表面图可视化不同年龄和时期的死亡率性别差异
# 第一部分：初始化环境 ---------------------------------------------------
library(HMDHFDplus)   # 用于从人类死亡率数据库下载数据(替代已停止维护的hmdget包)
library(ggplot2)  # 用于数据可视化
library(dplyr)    # 用于数据处理和管道操作
library(tidyr)    # 用于数据重塑(长宽格式转换)
library(readr)    # 用于高效读写CSV文件
library(sysfonts) # 用于字体管理
library(showtextdb) # 用于字体数据库
library(showtext)   # 用于在R图形中使用系统字体
showtext.auto()   # 激活showtext功能，允许使用系统字体
# 第二部分：数据获取 -----------------------------------------------------
# HMD数据库凭证（需要在"mortality.org"注册获取）
username = "lingjunl@126.com"
password = "66136613Llj!"
# 步骤1：从人类死亡率数据库下载英格兰和威尔士的死亡率数据
# country = "GBRTENW" 表示英国的英格兰和威尔士地区
# item = "Mx_1x1" 表示需要1岁年龄间隔、1年时间间隔的死亡率数据
# mx表示死亡率(mortality rate)
enwamx <- readHMD(country = "GBRTENW", item = "Mx_1x1",
username = username, password = password)
# 步骤1：从人类死亡率数据库下载英格兰和威尔士的死亡率数据
# country = "GBRTENW" 表示英国的英格兰和威尔士地区
# item = "Mx_1x1" 表示需要1岁年龄间隔、1年时间间隔的死亡率数据
# mx表示死亡率(mortality rate)
enwamx <- getMx(country = "GBRTENW",
username = username, password = password)
library(HMDHFDplus)
# HMD数据库凭证（需要在"mortality.org"注册获取）
username = "lingjunl@126.com"
password = "66136613Llj!"
# 步骤1：从人类死亡率数据库下载英格兰和威尔士的死亡率数据
# country = "GBRTENW" 表示英国的英格兰和威尔士地区
# item = "Mx_1x1" 表示需要1岁年龄间隔、1年时间间隔的死亡率数据
# mx表示死亡率(mortality rate)
# 尝试下载数据
enwamx <- readHMDweb(CNTRY = "GBRTENW", item = "Mx",
username = "lingjunl@126.com", password = "66136613Llj!")
# 步骤2：重塑数据格式，将宽格式转为长格式
# 原始数据中Female和Male是两个独立的列
# 转换后Sex成为一个变量列，mx(死亡率)成为对应的值列
# 尝试下载具体格式的死亡率数据（1年年龄组，1年时间段）
enwamx <- readHMDweb(CNTRY = "GBRTENW", item = "Mx_1x1",
username = "lingjunl@126.com", password = "66136613Llj!")
# 整理数据格式以匹配原代码预期
enwamx <- enwamx %>%
pivot_longer(cols = c(Female, Male), names_to = "Sex", values_to = "mx") %>%
select(Year, Age, Sex, mx)
# 使用sprintf格式化死亡率数值，保留5位小数
write_csv(mutate(enwamx, mx = sprintf("%1.5f", mx)), file = "/Users/tuo/Desktop/Lexis/demographic-research.36-21/data/enwamx.csv")
enwamx %>%
# 步骤1：将数据从长格式转回宽格式，以便计算性别比
# 这样每一行包含相同年份和年龄的男性和女性死亡率
pivot_wider(names_from = Sex, values_from = mx) %>%
# 步骤2：计算男性死亡率除以女性死亡率的比值
# na_if(Male/Female, Inf)将无穷大值（当Female=0时）转换为NA
mutate(mx_sex_ratio = na_if(Male/Female, Inf)) %>%
# 步骤3：数据筛选，仅保留1905年及以后的数据，且年龄不超过100岁
# 这可能是因为早期数据质量问题或分析关注点
filter(Year >= 1905, Age <= 100) -> dat
# 步骤1：定义性别比的断点和标签
# 断点定义了不同程度的性别死亡率差异
# 小于1的值表示女性死亡率高于男性，大于1的值表示男性死亡率高于女性
breaks <- c(0, 1/2 , 100/175, 100/150, 100/125, 100/101,
101/100, 125/100, 150/100, 175/100, 2/1, Inf)
# 为每个区间定义描述性标签
# 注意部分标签后添加了空格，这是为了确保因子水平唯一性
labels <- c(">100%女性\n死亡率过剩",
"75到100%",
"50到75%",
"25到50%",
"1到25%",
"死亡率相等",
# 下面的标签末尾有空格，确保与女性过剩的标签区分
"1到25% ",
"25到50% ",
"50到75% " ,
"75到100% ",
">100%男性\n死亡率过剩")
# 步骤2：将连续的性别比值转换为离散分类变量
dat %>%
# 使用cut函数将连续变量分割成离散区间
# include.lowest=TRUE确保包含最小值
mutate(mx_sex_ratio_disc =
cut(mx_sex_ratio,
breaks, labels,
include.lowest = TRUE)) -> dat
plot_lexis_surface <- ggplot(dat) +
# 步骤1：使用geom_raster创建热图
# x轴为年份，y轴为年龄，颜色表示性别比分类
# +0.5确保像素中心对齐在格点上，而不是左下角
geom_raster(aes(x = Year+0.5, y = Age+0.5,
fill = mx_sex_ratio_disc)) +
# 步骤2：添加Lexis网格辅助线
# 水平线表示同一年龄，每10岁一条
geom_hline(yintercept = seq(10, 100, 10),
alpha = 0.2, lty = "dotted") +
# 垂直线表示同一时间点，每10年一条
geom_vline(xintercept = seq(1910, 1990, 10),
alpha = 0.2, lty = "dotted") +
# 对角线表示同一出生队列，每10年一条
# 公式中intercept值调整使对角线能表示正确的出生队列
geom_abline(intercept = seq(-100, 100, 10)-1910,
alpha = 0.2, lty = "dotted") +
# 步骤3：设置图表外观和比例尺
# 使用ColorBrewer的发散色调色板(RdBu)，表示女性过剩和男性过剩
# drop=FALSE确保即使数据中没有出现某些分类，图例也会显示所有分类
scale_fill_brewer(name = NULL, type = "div", palette = 5, drop = FALSE) +
# 设置x轴(年份)的标签和刻度
scale_x_continuous("年份", expand = c(0.02, 0),
breaks = seq(1900, 2010, 10)) +
# 设置y轴(年龄)的标签和刻度
scale_y_continuous("年龄", expand = c(0, 0),
breaks = seq(0, 100, 10)) +
# 反转图例顺序，使得男性过剩在上，女性过剩在下
guides(fill = guide_legend(reverse = TRUE)) +
# 步骤4：设置坐标系和主题
# 等比例坐标确保Lexis图形不会变形，1年宽度=1岁高度
coord_equal() +
# 使用极简主题，移除大部分背景元素
theme_void() +
# 自定义主题元素，确保坐标轴文本可见
theme(
axis.text = element_text(colour = "black"),
axis.text.y = element_text(),
axis.text.x = element_text()
)
# 显示绘制的图表
plot_lexis_surface
library(APCI)
# 1. 载入内置数据 -------------------------------
data(cpswomen)               # CPS 女性数据
str(cpswomen)                # 查看数据结构
View(cpswomen)
# 2. 数据探索：原始趋势图 ------------------------
apci.plot.raw(
data        = cpswomen,
outcome_var = "labforce",
age         = "age",
period      = "year"
)
# 1. 载入官方示例数据
data("women9017")          # 1000 行 × 23 列
str(women9017)
# 2. 把分组变量设为因子
women9017 <- transform(women9017,
acc = factor(acc),
pcc = factor(pcc))
# 3. 建模（连续型结果 inlfc）
fit <- apci(
outcome = "inlfc",
age     = "acc",
period  = "pcc",
weight  = "wt",
data    = women9017,
family  = "gaussian",
dev.test = FALSE            # 跳过全局 F 检验，直接建模
)
# 4. 查看结果
print(fit$cohort_average)     # 队列平均偏差
print(fit$cohort_slope)       # 队列内生命周期斜率
# 5. 可视化三连
apci.plot.raw   (data = women9017, outcome_var = "inlfc", age = "acc", period = "pcc")
apci.plot.heatmap(model = fit, age = "acc", period = "pcc")
apci.bar        (model = fit, age = "acc", period = "pcc")
##############################################
# 绘制Lexis surface的死亡率性别比               #
##############################################
# 本代码的目标：
# 1. 从人类死亡率数据库(HMD)获取英格兰和威尔士的死亡率数据
# 2. 计算男性与女性死亡率的比值（性别比）
# 3. 通过Lexis表面图可视化不同年龄和时期的死亡率性别差异
# 第一部分：初始化环境 ---------------------------------------------------
#install.packages("HMDHFDplus")
library(HMDHFDplus)
library(HMDHFDplus)   # 用于从人类死亡率数据库下载数据(替代已停止维护的hmdget包)
library(ggplot2)  # 用于数据可视化
library(dplyr)    # 用于数据处理和管道操作
library(tidyr)    # 用于数据重塑(长宽格式转换)
library(readr)    # 用于高效读写CSV文件
library(sysfonts) # 用于字体管理
library(showtextdb) # 用于字体数据库
library(showtext)   # 用于在R图形中使用系统字体
showtext.auto()   # 激活showtext功能，允许使用系统字体
# 第二部分：数据获取 -----------------------------------------------------
# 安装并加载HMDHFDplus包
# HMD数据库凭证（需要在"mortality.org"注册获取）
username = "lingjunl@126.com"
password = "66136613Llj!"
# 步骤1：从人类死亡率数据库下载英格兰和威尔士的死亡率数据
# country = "GBRTENW" 表示英国的英格兰和威尔士地区
# item = "Mx_1x1" 表示需要1岁年龄间隔、1年时间间隔的死亡率数据
# mx表示死亡率(mortality rate)
# 尝试下载数据
enwamx <- readHMDweb(CNTRY = "GBRTENW", item = "Mx",
username = "lingjunl@126.com", password = "66136613Llj!")
# 尝试下载具体格式的死亡率数据（1年年龄组，1年时间段）
enwamx <- readHMDweb(CNTRY = "GBRTENW", item = "Mx_1x1",
username = "lingjunl@126.com", password = "66136613Llj!")
# 整理数据格式以匹配原代码预期
enwamx <- enwamx %>%
pivot_longer(cols = c(Female, Male), names_to = "Sex", values_to = "mx") %>%
select(Year, Age, Sex, mx)
# 使用sprintf格式化死亡率数值，保留5位小数
write_csv(mutate(enwamx, mx = sprintf("%1.5f", mx)), file = "/Users/tuo/Desktop/Lexis/demographic-research.36-21/data/enwamx.csv")
# 第三部分：数据处理 - 计算性别比 ----------------------------------------
enwamx %>%
# 步骤1：将数据从长格式转回宽格式，以便计算性别比
# 这样每一行包含相同年份和年龄的男性和女性死亡率
pivot_wider(names_from = Sex, values_from = mx) %>%
# 步骤2：计算男性死亡率除以女性死亡率的比值
# na_if(Male/Female, Inf)将无穷大值（当Female=0时）转换为NA
mutate(mx_sex_ratio = na_if(Male/Female, Inf)) %>%
# 步骤3：数据筛选，仅保留1905年及以后的数据，且年龄不超过100岁
# 这可能是因为早期数据质量问题或分析关注点
filter(Year >= 1905, Age <= 100) -> dat
# 第四部分：数据分类 - 将连续的性别比转换为分类变量 ---------------------
# 步骤1：定义性别比的断点和标签
# 断点定义了不同程度的性别死亡率差异
# 小于1的值表示女性死亡率高于男性，大于1的值表示男性死亡率高于女性
breaks <- c(0, 1/2 , 100/175, 100/150, 100/125, 100/101,
101/100, 125/100, 150/100, 175/100, 2/1, Inf)
# 为每个区间定义描述性标签
# 注意部分标签后添加了空格，这是为了确保因子水平唯一性
labels <- c(">100%女性\n死亡率过剩",
"75到100%",
"50到75%",
"25到50%",
"1到25%",
"死亡率相等",
# 下面的标签末尾有空格，确保与女性过剩的标签区分
"1到25% ",
"25到50% ",
"50到75% " ,
"75到100% ",
">100%男性\n死亡率过剩")
# 步骤2：将连续的性别比值转换为离散分类变量
dat %>%
# 使用cut函数将连续变量分割成离散区间
# include.lowest=TRUE确保包含最小值
mutate(mx_sex_ratio_disc =
cut(mx_sex_ratio,
breaks, labels,
include.lowest = TRUE)) -> dat
# 第五部分：创建Lexis表面图 ----------------------------------------------
plot_lexis_surface <- ggplot(dat) +
# 步骤1：使用geom_raster创建热图
# x轴为年份，y轴为年龄，颜色表示性别比分类
# +0.5确保像素中心对齐在格点上，而不是左下角
geom_raster(aes(x = Year+0.5, y = Age+0.5,
fill = mx_sex_ratio_disc)) +
# 步骤2：添加Lexis网格辅助线
# 水平线表示同一年龄，每10岁一条
geom_hline(yintercept = seq(10, 100, 10),
alpha = 0.2, lty = "dotted") +
# 垂直线表示同一时间点，每10年一条
geom_vline(xintercept = seq(1910, 1990, 10),
alpha = 0.2, lty = "dotted") +
# 对角线表示同一出生队列，每10年一条
# 公式中intercept值调整使对角线能表示正确的出生队列
geom_abline(intercept = seq(-100, 100, 10)-1910,
alpha = 0.2, lty = "dotted") +
# 步骤3：设置图表外观和比例尺
# 使用ColorBrewer的发散色调色板(RdBu)，表示女性过剩和男性过剩
# drop=FALSE确保即使数据中没有出现某些分类，图例也会显示所有分类
scale_fill_brewer(name = NULL, type = "div", palette = 5, drop = FALSE) +
# 设置x轴(年份)的标签和刻度
scale_x_continuous("年份", expand = c(0.02, 0),
breaks = seq(1900, 2010, 10)) +
# 设置y轴(年龄)的标签和刻度
scale_y_continuous("年龄", expand = c(0, 0),
breaks = seq(0, 100, 10)) +
# 反转图例顺序，使得男性过剩在上，女性过剩在下
guides(fill = guide_legend(reverse = TRUE)) +
# 步骤4：设置坐标系和主题
# 等比例坐标确保Lexis图形不会变形，1年宽度=1岁高度
coord_equal() +
# 使用极简主题，移除大部分背景元素
theme_void() +
# 自定义主题元素，确保坐标轴文本可见
theme(
axis.text = element_text(colour = "black"),
axis.text.y = element_text(),
axis.text.x = element_text()
)
# 显示绘制的图表
plot_lexis_surface
# 保存图表（已注释掉）
# 如需生成PDF文件，取消下面注释
#ggsave("./out/fig/lexis_surface_raw.pdf", plot_lexis_surface,
#       width = 7, height = 7)  # 保存为7x7英寸的PDF文件
View(dat)
